/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as SkillsRouteImport } from './routes/skills'
import { Route as ResumeRouteImport } from './routes/resume'
import { Route as IndexRouteImport } from './routes/index'
import { Route as SkillsIndexRouteImport } from './routes/skills/index'
import { Route as SkillSkillIdRouteImport } from './routes/skill.$skillId'

const SkillsRoute = SkillsRouteImport.update({
  id: '/skills',
  path: '/skills',
  getParentRoute: () => rootRouteImport,
} as any)
const ResumeRoute = ResumeRouteImport.update({
  id: '/resume',
  path: '/resume',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const SkillsIndexRoute = SkillsIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => SkillsRoute,
} as any)
const SkillSkillIdRoute = SkillSkillIdRouteImport.update({
  id: '/skill/$skillId',
  path: '/skill/$skillId',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/resume': typeof ResumeRoute
  '/skills': typeof SkillsRouteWithChildren
  '/skill/$skillId': typeof SkillSkillIdRoute
  '/skills/': typeof SkillsIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/resume': typeof ResumeRoute
  '/skill/$skillId': typeof SkillSkillIdRoute
  '/skills': typeof SkillsIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/resume': typeof ResumeRoute
  '/skills': typeof SkillsRouteWithChildren
  '/skill/$skillId': typeof SkillSkillIdRoute
  '/skills/': typeof SkillsIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/resume' | '/skills' | '/skill/$skillId' | '/skills/'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/resume' | '/skill/$skillId' | '/skills'
  id: '__root__' | '/' | '/resume' | '/skills' | '/skill/$skillId' | '/skills/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  ResumeRoute: typeof ResumeRoute
  SkillsRoute: typeof SkillsRouteWithChildren
  SkillSkillIdRoute: typeof SkillSkillIdRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/skills': {
      id: '/skills'
      path: '/skills'
      fullPath: '/skills'
      preLoaderRoute: typeof SkillsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/resume': {
      id: '/resume'
      path: '/resume'
      fullPath: '/resume'
      preLoaderRoute: typeof ResumeRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/skills/': {
      id: '/skills/'
      path: '/'
      fullPath: '/skills/'
      preLoaderRoute: typeof SkillsIndexRouteImport
      parentRoute: typeof SkillsRoute
    }
    '/skill/$skillId': {
      id: '/skill/$skillId'
      path: '/skill/$skillId'
      fullPath: '/skill/$skillId'
      preLoaderRoute: typeof SkillSkillIdRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

interface SkillsRouteChildren {
  SkillsIndexRoute: typeof SkillsIndexRoute
}

const SkillsRouteChildren: SkillsRouteChildren = {
  SkillsIndexRoute: SkillsIndexRoute,
}

const SkillsRouteWithChildren =
  SkillsRoute._addFileChildren(SkillsRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  ResumeRoute: ResumeRoute,
  SkillsRoute: SkillsRouteWithChildren,
  SkillSkillIdRoute: SkillSkillIdRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
