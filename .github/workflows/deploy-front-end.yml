name: Deploy Frontend to Azure Static Web App

on:
  push:
    branches: [ main ]
    paths: 
      - 'src/frontend/**'
  workflow_dispatch:

env:
  NODE_VERSION: '20.x'
  APP_LOCATION: 'src/frontend' 
  OUTPUT_LOCATION: 'dist'

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    name: Build and Deploy
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: true
          lfs: false

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: '${{ env.APP_LOCATION }}/package-lock.json'

      - name: Install dependencies
        run: npm ci
        working-directory: ${{ env.APP_LOCATION }}

      # 🔐 PUBLIC-ONLY build-time values (these end up in the JS bundle).
      # Do NOT put real secrets here. Keep tokens/keys on the server/API.
      - name: Export public Vite env vars for build
        run: |
          echo "VITE_API_URL=${{ secrets.VITE_API_URL }}" >> $GITHUB_ENV
          echo "VITE_GITHUB_TOKEN=${{ secrets.VITE_GITHUB_TOKEN }}" >> $GITHUB_ENV
          echo "VITE_SHOW_EDIT_FUNCTIONALITY=false" >> $GITHUB_ENV
          echo "VITE_USE_MOCK_DATA=false" >> $GITHUB_ENV
        # If VITE_API_URL is sensitive, don't expose it. Point to your API domain only.

      - name: Build (Vite)
        env:
          # Ensure production mode so Vite loads the right defaults
          NODE_ENV: production
        run: npm run build
        working-directory: ${{ env.APP_LOCATION }}

      - name: Deploy to Azure Static Web App (upload prebuilt artifacts)
        uses: Azure/static-web-apps-deploy@v1
        with:
          # REQUIRED: set this in GitHub repo secrets
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN }}

          action: "upload"
          # We already built; tell the action to skip building again
          skip_app_build: true
          skip_api_build: true

          # Where the app and output live
          app_location: ${{ env.APP_LOCATION }}
          output_location: ${{ env.OUTPUT_LOCATION }}

          # repo_token can help with PR comments & checks (optional but typical)
          repo_token: ${{ secrets.GITHUB_TOKEN }}
